{"version":3,"sources":["components/Inputs.js","components/InputsConverted.js","helpers/tables.js","helpers/services.js","App.js","index.js"],"names":["Inputs","divisas","units","selectedDivisa","selectedUnity","quantityToConver","useState","currentDivisa","setCurrentDivisa","currentUnit","setCurrentUnit","useEffect","className","htmlFor","thousandSeparator","isNumericString","defaultValue","onChange","value","_quantityChangeHandle","target","name","e","event","map","moneda","index","ev","unit","InputsConverted","total","type","disabled","values","getUnitConvert","mainUnit","unitToConvert","find","val","console","log","getConversion","from","to","amount","a","axios","get","data","App","setUnits","divisasList","setDivisas","currentUnidad","setCurrentUnidad","toConvert","setToConvert","currentToDivisa","setCurrentToDivisa","currentToUnidad","setCurrentToUnidad","setTotal","getSelectedDivisa","component","convert","getUnity","curDivisa","curToDivisa","qtyToConvert","curUnity","curToUnity","totalConvertido","rates","rate_for_amount","unitToConvertValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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,KAAM,UACNH,MAAO,WAET,CACEG,KAAM,UACNH,MAAO,YAET,CACEG,KAAM,YACNH,MAAO,MAET,CACEG,KAAM,KACNH,MAAO,UAET,CACEG,KAAM,QACNH,MAAO,UAIb,CACEG,KAAM,eACNY,OAAQ,CACN,CACEZ,KAAM,eACNH,MAAO,GAET,CACEG,KAAM,MACNH,MAAO,QAET,CACEG,KAAM,YACNH,MAAO,MAET,CACEG,KAAM,MACNH,MAAO,SAET,CACEG,KAAM,UACNH,MAAO,OAET,CACEG,KAAM,SACNH,MAAO,QAET,CACEG,KAAM,UACNH,MAAO,QAET,CACEG,KAAM,UACNH,MAAO,SAET,CACEG,KAAM,YACNH,MAAO,MAET,CACEG,KAAM,KACNH,MAAO,QAET,CACEG,KAAM,QACNH,MAAO,QAIb,CACEG,KAAM,MACNY,OAAQ,CACN,CACEZ,KAAM,MACNH,MAAO,GAET,CACEG,KAAM,MACNH,MAAO,QAET,CACEG,KAAM,YACNH,MAAO,OAET,CACEG,KAAM,eACNH,MAAO,QAET,CACEG,KAAM,UACNH,MAAO,OAET,CACEG,KAAM,SACNH,MAAO,QAET,CACEG,KAAM,UACNH,MAAO,QAET,CACEG,KAAM,UACNH,MAAO,QAET,CACEG,KAAM,YACNH,MAAO,MAET,CACEG,KAAM,KACNH,MAAO,QAET,CACEG,KAAM,QACNH,MAAO,UAIb,CACEG,KAAM,UACNY,OAAQ,CACN,CACEZ,KAAM,UACNH,MAAO,GAET,CACEG,KAAM,MACNH,MAAO,YAET,CACEG,KAAM,YACNH,MAAO,SAET,CACEG,KAAM,eACNH,MAAO,YAET,CACEG,KAAM,MACNH,MAAO,YAET,CACEG,KAAM,SACNH,MAAO,SAET,CACEG,KAAM,UACNH,MAAO,WAET,CACEG,KAAM,UACNH,MAAO,WAET,CACEG,KAAM,YACNH,MAAO,QAET,CACEG,KAAM,KACNH,MAAO,UAET,CACEG,KAAM,QACNH,MAAO,SAIb,CACEG,KAAM,SACNY,OAAQ,CACN,CACEZ,KAAM,SACNH,MAAO,GAET,CACEG,KAAM,MACNH,MAAO,WAET,CACEG,KAAM,YACNH,MAAO,QAET,CACEG,KAAM,eACNH,MAAO,WAET,CACEG,KAAM,MACNH,MAAO,WAET,CACEG,KAAM,UACNH,MAAO,MAET,CACEG,KAAM,UACNH,MAAO,SAET,CACEG,KAAM,UACNH,MAAO,WAET,CACEG,KAAM,YACNH,MAAO,QAET,CACEG,KAAM,KACNH,MAAO,UAET,CACEG,KAAM,QACNH,MAAO,YAIb,CACEG,KAAM,UACNY,OAAQ,CACN,CACEZ,KAAM,UACNH,MAAO,GAET,CACEG,KAAM,MACNH,MAAO,SAET,CACEG,KAAM,YACNH,MAAO,QAET,CACEG,KAAM,eACNH,MAAO,SAET,CACEG,KAAM,MACNH,MAAO,SAET,CACEG,KAAM,UACNH,MAAO,QAET,CACEG,KAAM,SACNH,MAAO,QAET,CACEG,KAAM,UACNH,MAAO,SAET,CACEG,KAAM,YACNH,MAAO,MAET,CACEG,KAAM,KACNH,MAAO,QAET,CACEG,KAAM,QACNH,MAAO,UAIb,CACEG,KAAM,UACNY,OAAQ,CACN,CACEZ,KAAM,UACNH,MAAO,GAET,CACEG,KAAM,MACNH,MAAO,QAET,CACEG,KAAM,YACNH,MAAO,OAET,CACEG,KAAM,eACNH,MAAO,QAET,CACEG,KAAM,MACNH,MAAO,QAET,CACEG,KAAM,UACNH,MAAO,OAET,CACEG,KAAM,SACNH,MAAO,QAET,CACEG,KAAM,UACNH,MAAO,QAET,CACEG,KAAM,YACNH,MAAO,MAET,CACEG,KAAM,KACNH,MAAO,QAET,CACEG,KAAM,QACNH,MAAO,SAIb,CACEG,KAAM,YACNY,OAAQ,CACN,CACEZ,KAAM,YACNH,MAAO,GAET,CACEG,KAAM,MACNH,MAAO,aAET,CACEG,KAAM,YACNH,MAAO,SAET,CACEG,KAAM,eACNH,MAAO,aAET,CACEG,KAAM,MACNH,MAAO,aAET,CACEG,KAAM,UACNH,MAAO,UAET,CACEG,KAAM,SACNH,MAAO,UAET,CACEG,KAAM,UACNH,MAAO,aAET,CACEG,KAAM,UACNH,MAAO,OAET,CACEG,KAAM,KACNH,MAAO,YAET,CACEG,KAAM,QACNH,MAAO,OAIb,CA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","file":"static/js/main.da4e9bee.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport NumberFormat from \"react-number-format\";\n\nconst Inputs = ({\n  divisas,\n  units,\n  selectedDivisa,\n  selectedUnity,\n  quantityToConver,\n}) => {\n  const [currentDivisa, setCurrentDivisa] = useState(null);\n  const [currentUnit, setCurrentUnit] = useState(null);\n\n  useEffect(() => {\n    quantityToConver(0);\n    setCurrentUnit(\"DLE\");\n    setCurrentDivisa(\"USD\");\n  }, []);\n\n  const _handleDivisaChange = (event) => {\n    selectedDivisa(event, \"from\");\n    setCurrentDivisa(event);\n  };\n\n  const _quantityChangeHandle = (value) => {\n    quantityToConver(value);\n  };\n\n  const _handreUnityChange = (ev) => {\n    selectedUnity(ev, \"from\");\n    setCurrentUnit(ev);\n  };\n\n  return (\n    <div className=\"inputs\">\n      <div className=\"input\">\n        <label htmlFor=\"qty\">Cantidad</label>\n        <NumberFormat\n          thousandSeparator={false}\n          isNumericString={true}\n          defaultValue={0}\n          onChange={(value) => _quantityChangeHandle(value.target.value)}\n        />\n      </div>\n      <div className=\"moneda\">\n        <label htmlFor=\"moneda\">Moneda</label>\n        <select\n          name=\"divisa\"\n          onChange={(e) => _handleDivisaChange(e.target.value)}\n          value={currentDivisa}\n        >\n          {divisas.map((moneda, index) => {\n            return (\n              <option value={moneda} key={index}>\n                {moneda}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <div className=\"unidad\">\n        <label htmlFor=\"unidad\">Unidad</label>\n        <select\n          name=\"unidades\"\n          value={currentUnit}\n          onChange={(e) => _handreUnityChange(e.target.value)}\n        >\n          <option value=\"\">Seleccionar...</option>\n          {units.map((unit, index) => {\n            return (\n              <option value={unit} key={index}>\n                {unit}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default Inputs;\n","import { useEffect, useState } from \"react\";\n\nconst InputsConverted = ({\n  total,\n  selectedDivisa,\n  selectedUnity,\n  divisas,\n  units,\n}) => {\n  const [currentDivisa, setCurrentDivisa] = useState(null);\n  const [currentUnit, setCurrentUnit] = useState(null);\n\n  useEffect(() => {\n    setCurrentUnit(\"GLE\");\n    setCurrentDivisa(\"USD\");\n  },[]);\n\n  const _handleDivisaChange = (ev) => {\n    selectedDivisa(ev, \"to\");\n    setCurrentDivisa(ev)\n  };\n\n  const _handleUnityChange = (ev) => {\n    selectedUnity(ev, \"to\");\n    setCurrentUnit(ev)\n  };\n\n  return (\n    <div className=\"inputs\">\n      <div className=\"input\">\n        <label htmlFor=\"qty\">Cantidad</label>\n        <input type=\"text\" disabled={true} value={total} />\n      </div>\n      <div className=\"moneda\">\n        <label htmlFor=\"moneda\">Moneda</label>\n        <select\n          name=\"divisa\"\n          onChange={(e) => _handleDivisaChange(e.target.value)}\n          value={currentDivisa}\n        >\n          {divisas.map((moneda, index) => {\n            return (\n              <option value={moneda} key={index}>\n                {moneda}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <div className=\"unidad\">\n        <label htmlFor=\"unidad\">Unidad</label>\n        <select\n          name=\"unidades\"\n          value={currentUnit}\n          onChange={(e) => _handleUnityChange(e.target.value)}\n        >\n          <option value=\"\">Seleccionar...</option>\n          {units.map((unit, index) => {\n            return (\n              <option value={unit} key={index}>\n                {unit}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default InputsConverted;\n","const units = [\n  {\n    name: \"DLE\",\n    values: [\n      {\n        name: \"DLE\",\n        value: 1,\n      },\n      {\n        name: \"m3 Gasoil\",\n        value: 0.00099,\n      },\n      {\n        name: \"liter Gasoil\",\n        value: 0.99409,\n      },\n      {\n        name: \"GLE\",\n        value: 1.136,\n      },\n      {\n        name: \"Ton LNG\",\n        value: 0.00063,\n      },\n      {\n        name: \"m3 LNG\",\n        value: 0.00155,\n      },\n      {\n        name: \"gal LNG\",\n        value: 0.40898,\n      },\n      {\n        name: \"Sm3 gas\",\n        value: 1.00014,\n      },\n      {\n        name: \"mmft3 gas\",\n        value: 0.00003,\n      },\n      {\n        name: \"GJ\",\n        value: 0.03566,\n      },\n      {\n        name: \"mmBTU\",\n        value: 0.0338,\n      },\n    ],\n  },\n  {\n    name: \"m3 Gasoil\",\n    values: [\n      {\n        name: \"m3 Gasoil\",\n        value: 1,\n      },\n      {\n        name: \"DLE\",\n        value: 264.27061,\n      },\n      {\n        name: \"liter Gasoil\",\n        value: 1000.0,\n      },\n      {\n        name: \"GLE\",\n        value: 300.21142,\n      },\n      {\n        name: \"Ton LNG\",\n        value: 0.63696,\n      },\n      {\n        name: \"m3 LNG\",\n        value: 1.55738,\n      },\n      {\n        name: \"gal LNG\",\n        value: 411.41523,\n      },\n      {\n        name: \"Sm3 gas\",\n        value: 1006.08959,\n      },\n      {\n        name: \"mmft3 gas\",\n        value: 0.034,\n      },\n      {\n        name: \"GJ\",\n        value: 35.87296,\n      },\n      {\n        name: \"mmBTU\",\n        value: 34.001,\n      },\n    ],\n  },\n  {\n    name: \"liter Gasoil\",\n    values: [\n      {\n        name: \"liter Gasoil\",\n        value: 1,\n      },\n      {\n        name: \"DLE\",\n        value: 0.26427,\n      },\n      {\n        name: \"m3 Gasoil\",\n        value: 0.001,\n      },\n      {\n        name: \"GLE\",\n        value: 1.14276,\n      },\n      {\n        name: \"Ton LNG\",\n        value: 0.00064,\n      },\n      {\n        name: \"m3 LNG\",\n        value: 0.00156,\n      },\n      {\n        name: \"gal LNG\",\n        value: 0.41142,\n      },\n      {\n        name: \"Sm3 gas\",\n        value: 1.00609,\n      },\n      {\n        name: \"mmft3 gas\",\n        value: 0.00003,\n      },\n      {\n        name: \"GJ\",\n        value: 0.03587,\n      },\n      {\n        name: \"mmBTU\",\n        value: 0.034,\n      },\n    ],\n  },\n  {\n    name: \"GLE\",\n    values: [\n      {\n        name: \"GLE\",\n        value: 1,\n      },\n      {\n        name: \"DLE\",\n        value: 0.88028,\n      },\n      {\n        name: \"m3 Gasoil\",\n        value: 0.00088,\n      },\n      {\n        name: \"liter Gasoil\",\n        value: 0.87508,\n      },\n      {\n        name: \"Ton LNG\",\n        value: 0.00056,\n      },\n      {\n        name: \"m3 LNG\",\n        value: 0.00136,\n      },\n      {\n        name: \"gal LNG\",\n        value: 0.36002,\n      },\n      {\n        name: \"Sm3 gas\",\n        value: 0.89214,\n      },\n      {\n        name: \"mmft3 gas\",\n        value: 0.00003,\n      },\n      {\n        name: \"GJ\",\n        value: 0.03139,\n      },\n      {\n        name: \"mmBTU\",\n        value: 0.02975,\n      },\n    ],\n  },\n  {\n    name: \"Ton LNG\",\n    values: [\n      {\n        name: \"Ton LNG\",\n        value: 1,\n      },\n      {\n        name: \"DLE\",\n        value: 1579.28994,\n      },\n      {\n        name: \"m3 Gasoil\",\n        value: 1.56995,\n      },\n      {\n        name: \"liter Gasoil\",\n        value: 1569.95382,\n      },\n      {\n        name: \"GLE\",\n        value: 1794.07337,\n      },\n      {\n        name: \"m3 LNG\",\n        value: 2.44501,\n      },\n      {\n        name: \"gal LNG\",\n        value: 645.90291,\n      },\n      {\n        name: \"Sm3 gas\",\n        value: 1579.5142,\n      },\n      {\n        name: \"mmft3 gas\",\n        value: 0.05338,\n      },\n      {\n        name: \"GJ\",\n        value: 56.31889,\n      },\n      {\n        name: \"mmBTU\",\n        value: 53.38,\n      },\n    ],\n  },\n  {\n    name: \"m3 LNG\",\n    values: [\n      {\n        name: \"m3 LNG\",\n        value: 1,\n      },\n      {\n        name: \"DLE\",\n        value: 645.92399,\n      },\n      {\n        name: \"m3 Gasoil\",\n        value: 0.64211,\n      },\n      {\n        name: \"liter Gasoil\",\n        value: 642.10555,\n      },\n      {\n        name: \"GLE\",\n        value: 733.76965,\n      },\n      {\n        name: \"Ton LNG\",\n        value: 0.409,\n      },\n      {\n        name: \"gal LNG\",\n        value: 264.172,\n      },\n      {\n        name: \"Sm3 gas\",\n        value: 646.01571,\n      },\n      {\n        name: \"mmft3 gas\",\n        value: 0.02183,\n      },\n      {\n        name: \"GJ\",\n        value: 23.03423,\n      },\n      {\n        name: \"mmBTU\",\n        value: 21.83223,\n      },\n    ],\n  },\n  {\n    name: \"gal LNG\",\n    values: [\n      {\n        name: \"gal LNG\",\n        value: 1,\n      },\n      {\n        name: \"DLE\",\n        value: 2.44509,\n      },\n      {\n        name: \"m3 Gasoil\",\n        value: 0.00243,\n      },\n      {\n        name: \"liter Gasoil\",\n        value: 2.43063,\n      },\n      {\n        name: \"GLE\",\n        value: 2.77762,\n      },\n      {\n        name: \"Ton LNG\",\n        value: 0.00155,\n      },\n      {\n        name: \"m3 LNG\",\n        value: 0.00379,\n      },\n      {\n        name: \"Sm3 gas\",\n        value: 2.44544,\n      },\n      {\n        name: \"mmft3 gas\",\n        value: 0.00008,\n      },\n      {\n        name: \"GJ\",\n        value: 0.08719,\n      },\n      {\n        name: \"mmBTU\",\n        value: 0.08264,\n      },\n    ],\n  },\n  {\n    name: \"Sm3 gas\",\n    values: [\n      {\n        name: \"Sm3 gas\",\n        value: 1,\n      },\n      {\n        name: \"DLE\",\n        value: 0.99986,\n      },\n      {\n        name: \"m3 Gasoil\",\n        value: 0.00099,\n      },\n      {\n        name: \"liter Gasoil\",\n        value: 0.99395,\n      },\n      {\n        name: \"GLE\",\n        value: 1.1209,\n      },\n      {\n        name: \"Ton LNG\",\n        value: 0.00063,\n      },\n      {\n        name: \"m3 LNG\",\n        value: 0.00155,\n      },\n      {\n        name: \"gal LNG\",\n        value: 0.40893,\n      },\n      {\n        name: \"mmft3 gas\",\n        value: 0.00003,\n      },\n      {\n        name: \"GJ\",\n        value: 0.03566,\n      },\n      {\n        name: \"mmBTU\",\n        value: 0.0338,\n      },\n    ],\n  },\n  {\n    name: \"mmft3 gas\",\n    values: [\n      {\n        name: \"mmft3 gas\",\n        value: 1,\n      },\n      {\n        name: \"DLE\",\n        value: 29585.79882,\n      },\n      {\n        name: \"m3 Gasoil\",\n        value: 29.4109,\n      },\n      {\n        name: \"liter Gasoil\",\n        value: 29410.89968,\n      },\n      {\n        name: \"GLE\",\n        value: 33609.46746,\n      },\n      {\n        name: \"Ton LNG\",\n        value: 18.73361,\n      },\n      {\n        name: \"m3 LNG\",\n        value: 45.80384,\n      },\n      {\n        name: \"gal LNG\",\n        value: 12100.09196,\n      },\n      {\n        name: \"Sm3 gas\",\n        value: 29590.0,\n      },\n      {\n        name: \"GJ\",\n        value: 1055.05599,\n      },\n      {\n        name: \"mmBTU\",\n        value: 1000.0,\n      },\n    ],\n  },\n  {\n    name: \"GJ\",\n    values: [\n      {\n        name: \"GJ\",\n        value: 1,\n      },\n      {\n        name: \"DLE\",\n        value: 28.04192,\n      },\n      {\n        name: \"m3 Gasoil\",\n        value: 0.02788,\n      },\n      {\n        name: \"liter Gasoil\",\n        value: 27.87615,\n      },\n      {\n        name: \"GLE\",\n        value: 31.85562,\n      },\n      {\n        name: \"Ton LNG\",\n        value: 0.01776,\n      },\n      {\n        name: \"m3 LNG\",\n        value: 0.04341,\n      },\n      {\n        name: \"gal LNG\",\n        value: 11.46867,\n      },\n      {\n        name: \"Sm3 gas\",\n        value: 28.04591,\n      },\n      {\n        name: \"mmft3 gas\",\n        value: 0.00095,\n      },\n      {\n        name: \"mmBTU\",\n        value: 0.94782,\n      },\n    ],\n  },\n  {\n    name: \"mmBTU\",\n    values: [\n      {\n        name: \"mmBTU\",\n        value: 1\n      },\n      {\n        name: \"DLE\",\n        value: 29.5858,\n      },\n      {\n        name: \"m3 Gasoil\",\n        value: 0.02941,\n      },\n      {\n        name: \"liter Gasoil\",\n        value: 29.4109,\n      },\n      {\n        name: \"GLE\",\n        value: 33.60947,\n      },\n      {\n        name: \"Ton LNG\",\n        value: 0.01873,\n      },\n      {\n        name: \"m3 LNG\",\n        value: 0.0458,\n      },\n      {\n        name: \"gal LNG\",\n        value: 12.10009,\n      },\n      {\n        name: \"Sm3 gas\",\n        value: 29.59,\n      },\n      {\n        name: \"mmft3 gas\",\n        value: 0.001,\n      },\n      {\n        name: \"GJ\",\n        value: 1.05506,\n      },\n    ],\n  },\n];\n\nexport const divisas = [\"USD\", \"EUR\", \"GBP\", \"ARS\", \"INR\", \"MXN\"];\n\nexport const publicUnits = () => {\n  let unitsArray = units.map((unit) => unit.name);\n  return unitsArray;\n};\n\nexport const getUnitConvert = (mainUnit, unitToConvert) => {\n  const value = units\n    .find((unit) => unit.name == mainUnit)\n    .values.find((val) => val.name == unitToConvert);\n  console.log(value);\n  return value.value;\n};\n","import axios from \"axios\";\n\nexport const getConversion = async (from, to, amount) => {\n  try {\n    const data = await axios.get(\n        `https://api.getgeoapi.com/v2/currency/convert?api_key=44a83ec551e5b2d83409a4a7c7d976169b368106&from=${from}&to=${to}&amount=${amount}&format=json`\n      )\n      return data.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { useEffect, useState } from \"react\";\nimport Inputs from \"./components/Inputs\";\nimport InputsConverted from \"./components/InputsConverted\";\nimport { publicUnits, divisas, getUnitConvert } from \"./helpers/tables\";\nimport { getConversion } from \"./helpers/services\";\n\nconst App = () => {\n  //LISTAS DE DIVISAS Y UNIDADES\n  const [units, setUnits] = useState([]);\n  const [divisasList, setDivisas] = useState([]);\n\n  //UNIDAD SELECCIONADA\n  const [currentUnidad, setCurrentUnidad] = useState(\"DLE\");\n\n  //DIVISA SELECCIONADA\n  const [currentDivisa, setCurrentDivisa] = useState(\"USD\");\n\n  //CANTIDAD A CONVERTIR\n  const [toConvert, setToConvert] = useState(null);\n\n  //DIVISA SELECCIONADA COMPONENTE A CONVERTIR\n  const [currentToDivisa, setCurrentToDivisa] = useState(\"USD\");\n\n  //UNIDAD SELECCIONADA COMPONENTE A CONVERTIR\n  const [currentToUnidad, setCurrentToUnidad] = useState(\"GLE\");\n\n  //TOTAL DE OPERACION\n  const [total, setTotal] = useState(0);\n\n  //AL INCIAR CARGA LAS UNIDADES Y DIVISAS\n  useEffect(() => {\n    setUnits(publicUnits());\n    setDivisas(divisas);\n  }, []);\n\n  //SE EJECUTA CADA QUE SE CAMBIA EL INPUT DE DIVISAS DEL CONVERTIDOR DE:\n  const getSelectedDivisa = (ev, component) => {\n    component == \"from\" ? setCurrentDivisa(ev) : setCurrentToDivisa(ev);\n    component == \"from\" ? convert(ev, currentToDivisa, toConvert, currentUnidad, currentToUnidad) : convert(currentDivisa, ev, toConvert, currentUnidad, currentToUnidad);\n  };\n\n  //SE EJECUTA CADA QUE SE CAMBIA EL INPUT DE UNIDADES DEL CONVERTIDOR DE:\n  const getUnity = (ev, component) => {\n    component == \"from\" ? setCurrentUnidad(ev) : setCurrentToUnidad(ev);\n    component == \"from\" ? convert(currentDivisa, currentToDivisa, toConvert, ev, currentToUnidad) : convert(currentDivisa, currentToDivisa, toConvert, currentUnidad, ev);\n  };\n\n  //SE EJECUTA CADA QUE SE CAMBIA EL INPUT DE CANTIDAD DEL CONVERTIDOR DE:\n  const getQuantityToConvert = (ev) => {\n    setToConvert(ev);\n    convert(currentDivisa, currentToDivisa, ev, currentUnidad, currentToUnidad);\n  };\n\n  const convert = async (curDivisa, curToDivisa, qtyToConvert, curUnity, curToUnity) => {\n    const data = await getConversion(curDivisa, curToDivisa, qtyToConvert, curUnity, curToUnity);\n    const totalConvertido = data.rates[curToDivisa].rate_for_amount;\n\n    const unitToConvertValue = await getUnitConvert(curUnity, curToUnity);\n    const total = (totalConvertido / unitToConvertValue);\n    setTotal(total);\n  };\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"calculator\">\n        <div className=\"from\">\n          <h1 className=\"title\">Convertidor de:</h1>\n          <Inputs\n            divisas={divisasList}\n            units={units}\n            selectedDivisa={getSelectedDivisa}\n            selectedUnity={getUnity}\n            quantityToConver={getQuantityToConvert}\n          />\n        </div>\n        <div className=\"to\">\n          <h1 className=\"title\">Convertidor a:</h1>\n          <InputsConverted\n            divisas={divisasList}\n            units={units}\n            total={total}\n            selectedDivisa={getSelectedDivisa}\n            selectedUnity={getUnity}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}